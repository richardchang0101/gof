饿汉式和懒汉式单利类的比较
    从资源利用率的角度来讲饿汉式单利不及懒汉式，而且在系统加载时由于需要创建饿汉式单例对象，加载时间会变长。
    懒汉式在第一次使用时被创建，无需一直占用系统资源，实现了延迟加载，但是必须处理多个线程同时访问的问题，特别是当单利类作为资源控制器，实例化时必然涉及资源初始化，可能耗费大量时间
优点：
    单利模式提供了唯一实例的受控访问，因为单利类封装了他唯一实例，所以他可以严格控制客户怎么样及何时访问他。
    节约系统资源，对频繁需要创建和销毁的对象，单例模式可以提高系统性能。
    允许可变数目的实例。基于单利模式可以进行扩展没使用与控制单例对象相似的方法来获取指定个数的实例对象，节省空间有解决了由于单例对象共享过多有损性能的问题。
缺点：
    单例模式没有抽象层，因此扩展有很大困难
    单例类职责过重，一定程度上违背了单一职责原则。因为单利类集提供了业务方法，有提供了创建对象的方法（工厂方法），将对象的创建和对象本身的功能耦合在一起。
    垃圾回收时，如果实例的共享对象长时间不被利用，系统会认为是垃圾，会自动销毁并回收资源，下次利用是又需要重新实例化，这将导致共享的单例对象状态的丢失。
情景：
    1. 系统只需要一个单例对象，例如要求提供衣蛾唯一的序列号生成器或者资源管理器，或者因为资源消耗太大而只允许创建一个对象。
    2. 客户调用类的实例只允许使用一个公共访问点，除了该公共访问点，不能通过其他途径访问该实例。