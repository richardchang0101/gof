代理模式：
    给某个对象提供一个代理或者占位符，并由代理对象来控制对原对象的访问
代理模式的结构
    抽象主题角色subject：它声明了真实主题和代理主题的共同接口，这样依赖在任何使用真实主题的地方都可以使用代理主题，客户段通常需要针对抽象主题角色进行编程
    代理主题角色Proxy：它包含了对真实主题的引用，从而可以在任何时候操作真实主题对象，在代理主题角色中提供一个与真实主题角色相同的接口，以便在任何时候可以代替真实主题；代理主题角色还可以控制对真实主题的使用。
    负责在需要的时候创建删除真实的主题对象，并对真实主题对象的使用加以约束。通常在代理主题角色中客户端在调用所引用的主题操作之前或者之后还需要执行其他操作，而不是淡村调用真实主题对象中的操作
    真实主题角色RealSubject：它定义了代理角色所代表的真实对象，在真实主题角色中熟悉爱你了真实的业务操作，客户端可以通过代理主题角色间接调用它真实主题角色中定义的操作。
优点：
    协调调用者被调用者，一定程度上实现了解耦。
    客户端可以针对抽象主题角色进行编程，增加和更换代理类无需修改源代码，符合开闭原则，系统具有较好的灵活性和可扩展性
缺点：
    在客户端和真实主题间增加了代理对象，因此有些类型的代理模式可能会造成请求的处理速度变慢，例如保护代理
    实现代理模式需要额外的工作，而且有些代理模式的实现过程较为复杂，例如远程代理