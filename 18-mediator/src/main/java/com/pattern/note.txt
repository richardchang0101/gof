中介者模式：
    定义一个对象来封装一系列对象的交互。终结者模式使各个对象间不需要显式地相互引用，从而使其耦合松散，而且用户可以独立地改变他们之间的交互
组成：
    抽象中介者Mediator：它定义一个接口，该接口用于与个同事对象间进行通信
    具体中介者ConcreteMediator:它是抽象中介者的子类，通过协调各个同事对象来实现协作行为，他维持了对各个同事对象的引用
    抽象同事类Colleague：它定义各个同事类公有的方法，并声明一些抽象方法供子类实现，同时他维持了一个对抽象中介者类的引用，其子类可以通过该引用与中介者通信
    具体同事类ConcreteColleague：它是抽象同事类的子类，每一个同事对象在需要和其他同事对象通信时先与中介者通信，通过中介者间接完成与其他同事类的通信；在具体同事类中实现了在抽象同事类中声明的抽象方法
优点：
    中介者模式简化了对象之间的交互，他用中介者和同事的一对多交互代替了原来同事间多对多的交互，一对多关系更容易理解、维护和扩展，将原本难以理解的网状结构转换成相对简单的星型结构
    可将各同事对象解耦。终结者有利于各同事之间的松耦合，可以独立的改变和复用每一个同事和中介者，增加新的中介者类和新的同事类都比较方便，更好地符合开闭原则
    可以减少子类的生成，中介者将原本分布于多个对象间的行为集中在一起，改变这些行为只需要生成新的中介者子类即可，这使得各个同事类可以被重用，无需直接对同事类进行扩展
缺点：
    在具体中介者类中包含大量同事之间的交互细节，可能会导致具体中介者类非常复杂，使得系统难以维护