备忘录模式 也叫标记模式
    在不破坏封装的前提下捕获一个对象的内部状态，并在该对象之外保存这个状态，这样可以在以后将对象恢复到原先的状态
组成
    原发器Originator：原发器是一个普通类，他通过创建一个备忘录来存储当前内部状态，也可以使用备忘录来恢复其内部状态，一般将系统中需要保存内部状态的类设计为原发器
    备忘录Memento:备忘录用于存储原发器的内部状态，根据原发器来决定保存那些内部状态。备忘录的设计一般可以参考原发器的设计，根据实际需要确定备忘录类中的属性。需要注意，除了原发器本身与负责人类之外，备忘录对象不能直接供其他类使用，
        原发器的设计在不同的编程语言中实现机制有所不同
    负责人Caretaker：负责人又称管理者，它所负责保存备忘录，但是不能对备忘录的内部内容进行操作和检查。在负责人类中可以存储一个或多个备忘录对象，他只负责存储对象而不能修改对象，也无需知道对象实现细节
优点：
    提供了一种灰度是实现机制，使得用户可以方便的回到一个特定历史步骤，当新的状态无效或者存在问题时可以使用暂时存储起来的备忘录恢复
    备忘录实现了对信息的封装，一个备忘录对象是一种原发器对象状态的表示，不会被其他代码所改动。备忘录保存了原发器状态，采用列表。对战等集合存储备忘录支持多次撤销操作
缺点
    资源消耗过大，如果需要保存的原发器类的成员变量太多，就不可避免的占用大量存储空间，每保存一次对象的状态需要消耗大量的系统资源
