访问者模式：
    表示一个作用于某个对象结构中的各个元素的操作。访问者模式让用户可以在不改变各个元素的类的前提下定义作用于这些元素的新操作
组成
    抽象访问者Visitor：抽象访问者为对象结构中的每一个具体元素类声明一个访问操作，从这个操作的名称或参数类型可以清除的知道需要访问的具体元素类型，具体访问者需要实现这些操作方法，定义对这些元素的访问操作
    具体访问者ConcreteVistor：具体访问者实现了每个由抽象访问者声明的操作，每一个操作用于访问对象结构中一种类型的元素
    抽象元素Element：抽象元素一般是抽象类或者接口，他生命一个accept方法，用于接受访问者的访问操作，该方法通常以一个抽象访问者作为参数
    具体元素ConcreteElement：具体元素实现了accept方法，在accept方法中调用方文字的访问方法以便完成对一个元素的操作
    对象结构ObjectStructure：对象结构是一个元素的集合，它用于存放元素对象，并且提供了遍历其内部元素的方法。对象结构可以结合组合模式来实现，也可以是一个简单的集合对象
优点：
    在访问者模式中增加新的访问类很方便。使用访问者模式，增加新的访问操作就意味着增加一个新的具体访问者类，实现简单，无需修改源代码，符合开闭原则
    访问者模式将有关元素对象的访问行为集中到一个访问者对象中，而不是分散在一个个元素类中。类的职责更加清晰，有利于对象结构中元素对象的复用，相同的对象结构可以供多个访问者访问
    访问者模式让用户能够在不修改现有元素类层次结构的情况下定义作用于该层次的操作
缺点：
    在访问者模式中增加新的元素类很困难。在访问者模式中，每增加一个新的元素类都意味着要在抽象访问者角色中增加一个新的抽象操作，并在每一个具体防蚊子类中增加相应的具体操作，这位被了开闭原则要求
    访问者模式破坏了对象的封装性。访问者模式要求访问者对象访问并调用每一个元素对象的操作，这意味着元素独享有时候必须要暴露一些自己内部操作和内部状态，否则无法提供访问者访问
